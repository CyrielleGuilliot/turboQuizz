{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\turboquizz\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [lists, setLists] = useState([]);\n  const [newList, setNewList] = useState({\n    title: \"\",\n    words: [{\n      term: \"\",\n      definition: \"\"\n    }, {\n      term: \"\",\n      definition: \"\"\n    }]\n  });\n\n  // Charger les listes depuis l'API\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/lists\").then(response => response.json()).then(data => setLists(data)).catch(error => console.error(\"Erreur lors du chargement des listes\", error));\n  }, []);\n\n  // Ouvrir la popup et initialiser avec 2 cartes\n  const togglePopup = () => {\n    setShowPopup(!showPopup);\n  };\n\n  // Gérer le changement du titre\n  const handleChange = e => {\n    setNewList({\n      ...newList,\n      title: e.target.value\n    });\n  };\n\n  // Ajouter un mot (terme/définition)\n  const handleAddWord = () => {\n    setNewList({\n      ...newList,\n      words: [...newList.words, {\n        term: \"\",\n        definition: \"\"\n      }]\n    });\n  };\n\n  // Modifier un terme ou une définition\n  const handleWordChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedWords = [...newList.words];\n    updatedWords[index][name] = value;\n    setNewList({\n      ...newList,\n      words: updatedWords\n    });\n  };\n\n  // Soumettre la liste à l'API\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/api/lists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    }).then(res => res.json()).then(data => {\n      setLists([...lists, data]);\n      setShowPopup(false);\n      setNewList({\n        title: \"\",\n        words: []\n      }); // Réinitialisation\n    }).catch(error => console.error(\"Erreur ajout liste:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleHome\",\n        children: \"Lists :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: togglePopup,\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-circle-outline\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), \"Add list\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Title\",\n            value: newList.title,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), newList.words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"term\",\n              placeholder: \"Term\",\n              value: word.term,\n              onChange: e => handleWordChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"definition\",\n              placeholder: \"Definition\",\n              value: word.definition,\n              onChange: e => handleWordChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddWord,\n            className: \"add-word-button\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"checkmark-outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), \"Save\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-button\",\n              onClick: togglePopup,\n              children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"close-outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"fSYXtP/dv/vQKsSDLVvLmvrWWVc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","showPopup","setShowPopup","lists","setLists","newList","setNewList","title","words","term","definition","fetch","then","response","json","data","catch","error","console","togglePopup","handleChange","e","target","value","handleAddWord","handleWordChange","index","name","updatedWords","handleSubmit","preventDefault","method","headers","body","JSON","stringify","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","onSubmit","type","placeholder","onChange","required","map","word","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/turboquizz/client/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\n\r\nconst Home = () => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [lists, setLists] = useState([]);\r\n    const [newList, setNewList] = useState({\r\n        title: \"\",\r\n        words: [\r\n            { term: \"\", definition: \"\" },\r\n            { term: \"\", definition: \"\" }\r\n        ],\r\n    });\r\n\r\n    // Charger les listes depuis l'API\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/lists\")\r\n            .then((response) => response.json())\r\n            .then((data) => setLists(data))\r\n            .catch((error) => console.error(\"Erreur lors du chargement des listes\", error));\r\n    }, []);\r\n\r\n    // Ouvrir la popup et initialiser avec 2 cartes\r\n    const togglePopup = () => {\r\n        setShowPopup(!showPopup);\r\n    };\r\n\r\n    // Gérer le changement du titre\r\n    const handleChange = (e) => {\r\n        setNewList({ ...newList, title: e.target.value });\r\n    };\r\n\r\n    // Ajouter un mot (terme/définition)\r\n    const handleAddWord = () => {\r\n        setNewList({\r\n            ...newList,\r\n            words: [...newList.words, { term: \"\", definition: \"\" }],\r\n        });\r\n    };\r\n\r\n    // Modifier un terme ou une définition\r\n    const handleWordChange = (index, e) => {\r\n        const { name, value } = e.target;\r\n        const updatedWords = [...newList.words];\r\n        updatedWords[index][name] = value;\r\n        setNewList({ ...newList, words: updatedWords });\r\n    };\r\n\r\n    // Soumettre la liste à l'API\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(\"http://localhost:5000/api/lists\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(newList),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setLists([...lists, data]);\r\n                setShowPopup(false);\r\n                setNewList({ title: \"\", words: [] }); // Réinitialisation\r\n            })\r\n            .catch((error) => console.error(\"Erreur ajout liste:\", error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"lists-container\">\r\n            <div>\r\n                <div className=\"titleHome\">Lists :</div>\r\n                <button className=\"add-button\" onClick={togglePopup}>\r\n                    <ion-icon name=\"add-circle-outline\" size=\"large\"></ion-icon>\r\n                    Add list\r\n                </button>\r\n            </div>\r\n\r\n            {/* Popup d'ajout de liste */}\r\n            {showPopup && (\r\n                <div className=\"popup-overlay\">\r\n                    <div className=\"popup-content\">\r\n                        <h3>Create a list</h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {/* Input du titre */}\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Title\"\r\n                                value={newList.title}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n\r\n                            {/* Affichage des cartes (terme/définition) */}\r\n                            {newList.words.map((word, index) => (\r\n                                <div key={index} className=\"word-card\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"term\"\r\n                                        placeholder=\"Term\"\r\n                                        value={word.term}\r\n                                        onChange={(e) => handleWordChange(index, e)}\r\n                                        required\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"definition\"\r\n                                        placeholder=\"Definition\"\r\n                                        value={word.definition}\r\n                                        onChange={(e) => handleWordChange(index, e)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n\r\n                            <button type=\"button\" onClick={handleAddWord} className=\"add-word-button\">\r\n                                <ion-icon name=\"add-outline\"></ion-icon>\r\n                            </button>\r\n\r\n                            <div className=\"popup-buttons\">\r\n                                <button type=\"submit\" className=\"save-button\">\r\n                                    <ion-icon name=\"checkmark-outline\"></ion-icon>\r\n                                    Save\r\n                                </button>\r\n                                <button type=\"button\" className=\"cancel-button\" onClick={togglePopup}>\r\n                                    <ion-icon name=\"close-outline\"></ion-icon>\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}