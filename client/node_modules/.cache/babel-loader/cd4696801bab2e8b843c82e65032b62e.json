{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\turboquizz\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [lists, setLists] = useState([]);\n  const [newList, setNewList] = useState({\n    title: \"\",\n    words: []\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/lists\").then(response => response.json()).then(data => {\n      console.log(\"Données reçues :\", data);\n      setLists(data);\n    }).catch(error => console.error(\"Erreur lors du chargement des listes\", error));\n  }, []);\n\n  // Ouvrir/fermer la popup\n  const togglePopup = () => {\n    setShowPopup(!showPopup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleHome\",\n        children: \"Lists :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: togglePopup,\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"add-circle-outline\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \"Add list\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Enter title\",\n            value: newList.title,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"N0+ZdTFqb1VoMzSBy2JHBdMGRtM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","showPopup","setShowPopup","lists","setLists","newList","setNewList","title","words","fetch","then","response","json","data","console","log","catch","error","togglePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","size","onSubmit","handleSubmit","type","placeholder","value","onChange","handleChange","required","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/turboquizz/client/src/pages/Home.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./Home.css\"\r\n\r\nconst Home = () => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [lists, setLists] = useState([]);\r\n    const [newList, setNewList] = useState({\r\n        title: \"\",\r\n        words: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/lists\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(\"Données reçues :\", data);\r\n                setLists(data);\r\n            })\r\n            .catch((error) => console.error(\"Erreur lors du chargement des listes\", error));\r\n    }, []);\r\n\r\n    // Ouvrir/fermer la popup\r\n    const togglePopup = () => {\r\n        setShowPopup(!showPopup);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"lists-container\">\r\n            <div>\r\n                <div className=\"titleHome\">Lists :</div>\r\n                <button className=\"add-button\" onClick={togglePopup}>\r\n                    <ion-icon name=\"add-circle-outline\" size=\"large\"></ion-icon>\r\n                    Add list\r\n                </button>\r\n            </div>\r\n\r\n            {showPopup && (\r\n                <div className=\"popup-overlay\">\r\n                    <div className=\"popup-\">\r\n                        <h3>Add a list</h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <input\r\n                                type={\"text\"}\r\n                                name={\"title\"}\r\n                                placeholder={\"Enter title\"}\r\n                                value={newList.title}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}