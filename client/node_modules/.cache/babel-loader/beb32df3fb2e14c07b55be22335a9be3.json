{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\turboquizz\\\\client\\\\src\\\\pages\\\\Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport \"./css/Learn.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Learn = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [list, setList] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/lists`).then(response => response.json()).then(data => {\n      const selectedList = data.find(l => l.id === parseInt(id));\n      if (selectedList) {\n        setList(selectedList);\n        generateOptions(selectedList.words, 0);\n      }\n    }).catch(error => console.error(\"Erreur de chargement de la liste\", error));\n  }, [id]);\n  const generateOptions = (words, index) => {\n    if (!words || words.length === 0) return;\n    const correctDefinition = words[index].definition;\n    let incorrectDefs = words.map(w => w.definition).filter(def => def !== correctDefinition);\n    incorrectDefs = incorrectDefs.sort(() => 0.5 - Math.random()).slice(0, 3);\n    const allOptions = [correctDefinition, ...incorrectDefs].sort(() => 0.5 - Math.random());\n    setOptions(allOptions);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n  };\n  const handleChoice = selectedDef => {\n    const correctDef = list.words[currentIndex].definition;\n    const isAnswerCorrect = selectedDef === correctDef;\n    setSelectedAnswer(selectedDef);\n    setIsCorrect(isAnswerCorrect);\n    if (isAnswerCorrect) {\n      setScore(score + 1);\n    }\n    setTimeout(() => {\n      const nextIndex = currentIndex + 1;\n      if (nextIndex < list.words.length) {\n        setCurrentIndex(nextIndex);\n        generateOptions(list.words, nextIndex);\n      } else {\n        alert(`Quiz terminé ! Score : ${score + 1} / ${list.words.length}`);\n        navigate(`/list/${id}`);\n      }\n    }, 1000); // Délai pour voir la correction\n  };\n  if (!list) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  const progress = (currentIndex + 1) / list.words.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exit-button\",\n      onClick: () => navigate(`/list/${id}`),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-x-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      label: `${Math.round(progress)}% completed`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"term\",\n      children: list.words[currentIndex].term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-button ${selectedAnswer ? option === list.words[currentIndex].definition ? \"correct\" : option === selectedAnswer ? \"incorrect\" : \"\" : \"\"}`,\n        onClick: () => handleChoice(option),\n        disabled: selectedAnswer !== null,\n        children: [option, selectedAnswer === option && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `bi ${isCorrect ? \"bi-check-lg\" : \"bi-x\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Learn, \"Pz7Zms68s/hG2Y5sxg8jJMhJKtM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Learn;\nexport default Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","ProgressBar","jsxDEV","_jsxDEV","Learn","_s","id","navigate","list","setList","currentIndex","setCurrentIndex","options","setOptions","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","score","setScore","fetch","then","response","json","data","selectedList","find","l","parseInt","generateOptions","words","catch","error","console","index","length","correctDefinition","definition","incorrectDefs","map","w","filter","def","sort","Math","random","slice","allOptions","handleChoice","selectedDef","correctDef","isAnswerCorrect","setTimeout","nextIndex","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","className","onClick","now","label","round","term","option","disabled","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/turboquizz/client/src/pages/Learn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport \"./css/Learn.css\";\r\n\r\nconst Learn = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [list, setList] = useState(null);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [options, setOptions] = useState([]);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [isCorrect, setIsCorrect] = useState(null);\r\n    const [score, setScore] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/api/lists`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const selectedList = data.find(l => l.id === parseInt(id));\r\n                if (selectedList) {\r\n                    setList(selectedList);\r\n                    generateOptions(selectedList.words, 0);\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Erreur de chargement de la liste\", error));\r\n    }, [id]);\r\n\r\n    const generateOptions = (words, index) => {\r\n        if (!words || words.length === 0) return;\r\n\r\n        const correctDefinition = words[index].definition;\r\n        let incorrectDefs = words\r\n            .map(w => w.definition)\r\n            .filter(def => def !== correctDefinition);\r\n\r\n        incorrectDefs = incorrectDefs.sort(() => 0.5 - Math.random()).slice(0, 3);\r\n        const allOptions = [correctDefinition, ...incorrectDefs].sort(() => 0.5 - Math.random());\r\n\r\n        setOptions(allOptions);\r\n        setSelectedAnswer(null);\r\n        setIsCorrect(null);\r\n    };\r\n\r\n    const handleChoice = (selectedDef) => {\r\n        const correctDef = list.words[currentIndex].definition;\r\n        const isAnswerCorrect = selectedDef === correctDef;\r\n\r\n        setSelectedAnswer(selectedDef);\r\n        setIsCorrect(isAnswerCorrect);\r\n\r\n        if (isAnswerCorrect) {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const nextIndex = currentIndex + 1;\r\n            if (nextIndex < list.words.length) {\r\n                setCurrentIndex(nextIndex);\r\n                generateOptions(list.words, nextIndex);\r\n            } else {\r\n                alert(`Quiz terminé ! Score : ${score + 1} / ${list.words.length}`);\r\n                navigate(`/list/${id}`);\r\n            }\r\n        }, 1000); // Délai pour voir la correction\r\n    };\r\n\r\n    if (!list) return <p>Chargement...</p>;\r\n\r\n    const progress = ((currentIndex + 1) / list.words.length) * 100;\r\n\r\n    return (\r\n        <div className=\"learn-container\">\r\n            <button className=\"exit-button\" onClick={() => navigate(`/list/${id}`)}>\r\n                <i className=\"bi bi-x-lg\"></i>\r\n            </button>\r\n\r\n            <ProgressBar now={progress} label={`${Math.round(progress)}% completed`} />\r\n\r\n            <h2 className=\"term\">{list.words[currentIndex].term}</h2>\r\n\r\n            <div className=\"options-container\">\r\n                {options.map((option, index) => (\r\n                    <button\r\n                        key={index}\r\n                        className={`option-button ${\r\n                            selectedAnswer\r\n                                ? option === list.words[currentIndex].definition\r\n                                    ? \"correct\"\r\n                                    : option === selectedAnswer\r\n                                        ? \"incorrect\"\r\n                                        : \"\"\r\n                                : \"\"\r\n                        }`}\r\n                        onClick={() => handleChoice(option)}\r\n                        disabled={selectedAnswer !== null}\r\n                    >\r\n                        {option}\r\n                        {selectedAnswer === option && (\r\n                            <i className={`bi ${isCorrect ? \"bi-check-lg\" : \"bi-x\"}`} />\r\n                        )}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Learn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}