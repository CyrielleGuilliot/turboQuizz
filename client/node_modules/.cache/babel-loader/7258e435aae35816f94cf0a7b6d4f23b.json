{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import\"./css/Cards.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Cards=()=>{const{id}=useParams();const navigate=useNavigate();const[list,setList]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const[flipped,setFlipped]=useState(false);const[correctCount,setCorrectCount]=useState(0);const[incorrectCount,setIncorrectCount]=useState(0);// Récupération des mots depuis l'API\nuseEffect(()=>{const userId=localStorage.getItem(\"userId\");fetch(`https://turboquizz.onrender.com/api/users/${userId}/lists`).then(response=>response.json()).then(data=>{const foundList=data.find(l=>l.id===parseInt(id));setList(foundList);}).catch(error=>console.error(\"Erreur de chargement de la liste\",error));},[id]);if(!list)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});const words=list.words;// retourner la carte\nconst handleFlip=()=>{setFlipped(!flipped);};// Fonction pour gérer la réponse (correcte ou incorrecte)\nconst handleAnswer=isCorrect=>{if(currentIndex<words.length){if(isCorrect&&correctCount<words.length){setCorrectCount(correctCount+1);}else if(!isCorrect&&incorrectCount<words.length){setIncorrectCount(incorrectCount+1);}// Passer à la carte suivante si on n'est pas à la dernière\nif(currentIndex<words.length-1){setCurrentIndex(currentIndex+1);setFlipped(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"exit-button\",onClick:()=>{const userId=localStorage.getItem(\"userId\");navigate(`/user/${userId}/list/${id}`);},children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-x-lg\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-counter\",children:[currentIndex+1,\"/\",words.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"score-circle incorrect-score\",children:/*#__PURE__*/_jsx(\"span\",{children:incorrectCount})}),/*#__PURE__*/_jsx(\"div\",{className:\"score-circle correct-score\",children:/*#__PURE__*/_jsx(\"span\",{children:correctCount})})]}),/*#__PURE__*/_jsx(\"div\",{className:`flip-card ${flipped?\"flipped\":\"\"}`,onClick:handleFlip,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flip-card-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flip-card-front\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:words[currentIndex].term})}),/*#__PURE__*/_jsx(\"div\",{className:\"flip-card-back\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:words[currentIndex].definition})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button2-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"incorrect-button\",onClick:()=>handleAnswer(false),children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-x-lg\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"correct-button\",onClick:()=>handleAnswer(true),children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check-lg\"})})]})]});};export default Cards;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","Cards","id","navigate","list","setList","currentIndex","setCurrentIndex","flipped","setFlipped","correctCount","setCorrectCount","incorrectCount","setIncorrectCount","userId","localStorage","getItem","fetch","then","response","json","data","foundList","find","l","parseInt","catch","error","console","children","words","handleFlip","handleAnswer","isCorrect","length","className","onClick","term","definition"],"sources":["C:/Users/cyrie/Documents/Projets/turboQuizz/client/src/pages/Cards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"./css/Cards.css\";\r\n\r\nconst Cards = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [list, setList] = useState(null);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [flipped, setFlipped] = useState(false);\r\n    const [correctCount, setCorrectCount] = useState(0);\r\n    const [incorrectCount, setIncorrectCount] = useState(0);\r\n\r\n    // Récupération des mots depuis l'API\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem(\"userId\");\r\n\r\n        fetch(`https://turboquizz.onrender.com/api/users/${userId}/lists`)\r\n\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const foundList = data.find((l) => l.id === parseInt(id));\r\n                setList(foundList);\r\n            })\r\n            .catch((error) => console.error(\"Erreur de chargement de la liste\", error));\r\n    }, [id]);\r\n\r\n    if (!list) return <p>Loading...</p>;\r\n    const words = list.words;\r\n\r\n    // retourner la carte\r\n    const handleFlip = () => {\r\n        setFlipped(!flipped);\r\n    };\r\n\r\n    // Fonction pour gérer la réponse (correcte ou incorrecte)\r\n    const handleAnswer = (isCorrect) => {\r\n        if (currentIndex < words.length) {\r\n            if (isCorrect && correctCount < words.length) {\r\n                setCorrectCount(correctCount + 1);\r\n            } else if (!isCorrect && incorrectCount < words.length) {\r\n                setIncorrectCount(incorrectCount + 1);\r\n            }\r\n\r\n            // Passer à la carte suivante si on n'est pas à la dernière\r\n            if (currentIndex < words.length - 1) {\r\n                setCurrentIndex(currentIndex + 1);\r\n                setFlipped(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <button\r\n                className=\"exit-button\"\r\n                onClick={() => {\r\n                    const userId = localStorage.getItem(\"userId\");\r\n                    navigate(`/user/${userId}/list/${id}`);\r\n                }}>\r\n                <i className=\"bi bi-x-lg\"></i>\r\n            </button>\r\n\r\n            <div className=\"progress-counter\">{currentIndex + 1}/{words.length}</div>\r\n\r\n            <div className=\"score-container\">\r\n                <div className=\"score-circle incorrect-score\">\r\n                    <span>{incorrectCount}</span>\r\n                </div>\r\n                <div className=\"score-circle correct-score\">\r\n                    <span>{correctCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`flip-card ${flipped ? \"flipped\" : \"\"}`} onClick={handleFlip}>\r\n                <div className=\"flip-card-inner\">\r\n                    {/* Face avant */}\r\n                    <div className=\"flip-card-front\">\r\n                        <div className=\"card-content\">{words[currentIndex].term}</div>\r\n                    </div>\r\n                    {/* Face arrière */}\r\n                    <div className=\"flip-card-back\">\r\n                        <div className=\"card-content\">{words[currentIndex].definition}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"button2-group\">\r\n                <button className=\"incorrect-button\" onClick={() => handleAnswer(false)}>\r\n                    <i className=\"bi bi-x-lg\"></i>\r\n                </button>\r\n                <button className=\"correct-button\" onClick={() => handleAnswer(true)}>\r\n                    <i className=\"bi bi-check-lg\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}